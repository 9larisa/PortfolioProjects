select * 
from PortfolioProject..CovidDeaths
where continent is not null
order by 3, 4


select * 
from PortfolioProject..CovidVaccinations
where continent is not null
order by 3, 4


-- Select Data that we are going to be using
SELECT location, date, total_cases, new_cases, total_deaths, population
FROM PortfolioProject..CovidDeaths
where continent is not null
order by 1, 2


--Looking at Total Cases vs Total Deaths
--Shows likelihood of dying if you contract covid in your country
SELECT location, date, total_cases, total_deaths, round(CAST(total_deaths as float) / CAST(total_cases as float) * 100, 4) as DeathsPercentage
FROM PortfolioProject..CovidDeaths
where location like 'Russia' AND continent is not null
ORDER BY 1, 2


--Looking at Total Cases vs Population
--Shows what percentage of population got covid
SELECT location, date, population, total_cases, round(CAST(total_cases as float) / CAST(population as float) * 100, 4) as PercentPopulationInfected
FROM PortfolioProject..CovidDeaths
where continent is not null
ORDER BY 1, 2



--Looking at countries with highest infection rate compared to pupilation
SELECT location, population, MAX(CAST(total_cases as float)) as HighestInfectionCount, round(MAX((CAST(total_cases as float) / CAST(population as float) * 100)), 4) as PercentPopulationInfected
FROM PortfolioProject..CovidDeaths
where continent is not null
GROUP BY location, population
ORDER BY 4 desc



--Showing countries with highest death count per population
SELECT location, MAX(CAST(total_deaths as float)) as TotalDeathCount
FROM PortfolioProject..CovidDeaths
where continent is not null
GROUP BY location
ORDER BY TotalDeathCount desc


-- LET'S BREAK THINGS DOWN BY CONTINENT


-- Showing continents with the highest death count per population

SELECT location, MAX(CAST(total_deaths as float)) as TotalDeathCount
FROM PortfolioProject..CovidDeaths
where continent is null and location not like '%income%'
GROUP BY location
ORDER BY TotalDeathCount desc


-- GLOBAL NUMBERS

select date, SUM(new_cases) as total_cases, SUM(new_deaths) as total_deaths, SUM(CAST(new_deaths as float))/SUM(CAST(new_cases as float)) * 100 as DeathPercentage
FROM PortfolioProject..CovidDeaths
WHERE continent is not NULL and new_cases <> 0 and new_deaths <> 0
GROUP BY date
ORDER BY 1, 2


select SUM(new_cases) as total_cases, SUM(new_deaths) as total_deaths, SUM(CAST(new_deaths as float))/SUM(CAST(new_cases as float)) * 100 as DeathPercentage
FROM PortfolioProject..CovidDeaths
WHERE continent is not NULL and new_cases <> 0 and new_deaths <> 0
ORDER BY 1, 2




--Looking at total population vs vaccinations
SELECT dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations, 
SUM(CONVERT(float, vac.new_vaccinations)) OVER (Partition by dea.location order by dea.location, dea.date) as RollingPeopleVaccinated
FROM PortfolioProject..CovidDeaths dea
JOIN PortfolioProject..CovidVaccinations vac
    ON dea.location = vac.location
    AND dea.date = vac.date 
WHERE dea.continent is not null
ORDER BY 2, 3





-- USE CTE
with PopvsVac (continent, location, date, population, new_vaccinations, RollingPeopleVaccinated)
as
(
SELECT dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations, 
SUM(CONVERT(float, vac.new_vaccinations)) OVER (Partition by dea.location order by dea.location, dea.date) as RollingPeopleVaccinated
FROM PortfolioProject..CovidDeaths dea
JOIN PortfolioProject..CovidVaccinations vac
    ON dea.location = vac.location
    AND dea.date = vac.date 
WHERE dea.continent is not null
)
SELECT *, (RollingPeopleVaccinated/population * 100) as PercentageVaccinatedOfTotalPopulation 
FROM PopvsVac


-- TEMP TABLE
Drop TABLE if EXISTS #PercentPopulationVaccinated
Create TABLE #PercentPopulationVaccinated
(
    continent NVARCHAR(255),
    location NVARCHAR(255), 
    date DATETIME,
    population NUMERIC,
    new_vaccinations NUMERIC,
    RollingPeopleVaccinated NUMERIC
)

Insert into #PercentPopulationVaccinated
SELECT dea.continent, dea.location, dea.date, dea.population, CONVERT(int, vac.new_vaccinations), 
SUM(CONVERT(float, vac.new_vaccinations)) OVER (Partition by dea.location order by dea.location, dea.date) as RollingPeopleVaccinated
FROM PortfolioProject..CovidDeaths dea
JOIN PortfolioProject..CovidVaccinations vac
    ON dea.location = vac.location
    AND dea.date = vac.date 
--WHERE dea.continent is not null

SELECT *, (RollingPeopleVaccinated/population * 100) --as PercentageVaccinatedOfTotalPopulation 
FROM #PercentPopulationVaccinated




-- Creating view to store data for later visualizations

CREATE VIEW PercentPopulationVaccinated AS
SELECT dea.continent, dea.location, dea.date, dea.population, CONVERT(int, vac.new_vaccinations) as new_vaccinations, 
SUM(CONVERT(float, vac.new_vaccinations)) OVER (Partition by dea.location order by dea.location, dea.date) as RollingPeopleVaccinated
FROM PortfolioProject..CovidDeaths dea
JOIN PortfolioProject..CovidVaccinations vac
    ON dea.location = vac.location
    AND dea.date = vac.date 
WHERE dea.continent is not null




SELECT *
FROM PercentPopulationVaccinated